{"version":3,"file":"src_app_components_installation_installation_module_ts.53e3cd4df395b380.js","mappings":"sXAQO,IAAMA,EAAiB,MAAxB,MAAOA,EACTC,WAAAA,CACYC,EACDC,EACCC,GAFA,KAAAF,SAAAA,EACD,KAAAC,UAAAA,EACC,KAAAC,OAAAA,CACT,CAEHC,WAAAA,GACI,OAAIC,EAAAA,GAAAA,KAAmBC,KAAKL,SAASM,cAAcC,QAC/CF,KAAKH,OAAOM,SAAS,CAAC,KAAM,CAAEC,YAAY,KACnC,EAGf,EAb0B,O,sCAAjBX,GAAiBY,EAAAA,sBAAAC,EAAAA,GAAAD,EAAAA,sBAAAE,EAAAA,GAAAF,EAAAA,sBAAAG,EAAAA,QAAA,E,sDAAjBf,EAAiBgB,QAAjBhB,EAAiBiB,YAAjBjB,CAAiB,K,kJCNtBY,EAAAA,uBAAA,gB,KAEUA,EAAAA,wBAAA,yB,sBAEVA,EAAAA,uBAAA,gB,KAEUA,EAAAA,wBAAA,2B,mEAIdA,EAAAA,4BAAA,UAAAA,CACgD,UADhDA,CACgD,iBAEpBA,EAAAA,oBAAA,mBAAaA,EAAAA,4BACjCA,EAAAA,oBAAA,G,qCACJA,EAAAA,4BAEAA,EAAAA,4BAAA,eAAwDA,EAAAA,wBAAC,SAAD,WAAAA,EAAAA,2BAAAM,GAAA,MAAAC,EAAAP,EAAAA,6BAAA,OAASA,EAAAA,yBAAAO,EAAAC,sBAAqB,IAClFR,EAAAA,uBAAA,iBAGAA,EAAAA,oBAAA,G,qCACJA,EAAAA,2BAAAA,E,OAVsCA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,YAElCA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,wCAGmCA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,cAInCA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,sC,uBAIRA,EAAAA,4BAAA,YAKIA,EAAAA,uBAAA,gBACAA,EAAAA,oBAAA,G,qCACJA,EAAAA,6B,MAJKA,EAAAA,wBAAA,aAAAA,CAAgB,YAERA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,WACTA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,uC,CCfF,MAAOS,EASTpB,WAAAA,CACYqB,EACDpB,EACCE,EACAmB,GAHA,KAAAD,IAAAA,EACD,KAAApB,SAAAA,EACC,KAAAE,OAAAA,EACA,KAAAmB,oBAAAA,EAZZ,KAAAC,KAAOC,kBAAoBC,EAAAA,GAAAA,UAC3B,KAAApB,YAAcA,EAAAA,GAEd,KAAAqB,aAAa,EACb,KAAAC,cAAe,EAEP,KAAAC,SAAW,IAAIC,EAAAA,QAQnBvB,KAAKwB,qBACT,CAEAC,WAAAA,GACIzB,KAAKsB,SAASI,MAClB,CAGMb,mBAAAA,GAAmB,IAAAc,EAAA,YAAAC,EAAAA,EAAAA,IAAC,YAEtBD,EAAKX,oBAAoBa,wBACnBF,EAAKX,oBAAoBc,QACP,+BAApBH,EAAK9B,OAAOkC,KACZJ,EAAKX,oBAAoBgB,kBAC5B,GANoBJ,EAOzB,CAEQJ,mBAAAA,GACJxB,KAAKL,SAASM,cACTgC,MAAKC,EAAAA,EAAAA,WAAUlC,KAAKsB,WACpBa,WAAUlC,IACPD,KAAKC,cAAgBA,EACrBD,KAAKqB,aAAepB,IAAkBF,EAAAA,GAAAA,WACtCC,KAAKoB,YAAcnB,IAAkBF,EAAAA,GAAAA,UACrCC,KAAKe,IAAIqB,cAAc,GAEnC,E,sCAzCStB,GAA2BT,EAAAA,+BAAAA,EAAAA,mBAAAA,EAAAA,+BAAAC,EAAAA,GAAAD,EAAAA,+BAAAE,EAAAA,QAAAF,EAAAA,+BAAAG,EAAAA,IAAA,E,mDAA3BM,EAA2BuB,UAAA,0BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,6qBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDlBxCrC,EAAAA,4BAAA,UAAAA,CAAiC,SAEzBA,EAAAA,wBAAA,EAAAuC,EAAA,kBAIAvC,EAAAA,wBAAA,EAAAwC,EAAA,kBAIAxC,EAAAA,4BAAA,WAAmCA,EAAAA,oBAAA,G,qCAAsDA,EAAAA,2BAAAA,GAE7FA,EAAAA,wBAAA,EAAAyC,EAAA,cAeAzC,EAAAA,wBAAA,EAAA0C,EAAA,aAQJ1C,EAAAA,6B,MAhCmBA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,QAAAsC,EAAA1B,MAAA0B,EAAAvB,aAIAf,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAsC,EAAA1B,OAAA0B,EAAAvB,aAGwBf,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,2CAEjCA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAsC,EAAA1C,gBAAA0C,EAAA5C,YAAAiD,mBAeA3C,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAsC,EAAAtB,cAAAsB,EAAAvB,a,qzCCaL6B,EAAAA,GAAS,wCC1BP,IAAMC,EAAqB,MAA5B,MAAOA,G,6CAAAA,EAAqB,E,mDAArBA,EAAqBb,UAAA,mBAAAc,SAAA,CAAA9C,EAAAA,gCALnB,CAEP+C,EAAAA,MACHd,MAAA,EAAAC,KAAA,EAAAC,OAAA,oBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAPGrC,EAAAA,4BAAA,WACIA,EAAAA,uBAAA,wBAAAA,CAA2C,mBAE/CA,EAAAA,4B,wDAMK6C,CAAqB,K,8DCdlC7C,EAAAA,4BAAA,sBAIIA,EAAAA,oBAAA,G,qCACJA,EAAAA,6B,2CAFcA,EAAAA,wBAAA,QAAAgD,EAAAC,MAAAC,MACVlD,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,+C,wBAIAA,EAAAA,4BAAA,WAA2DA,EAAAA,oBAAA,G,qCAA0CA,EAAAA,6B,MAA1CA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,+B,uBAC3DA,EAAAA,4BAAA,WAAwDA,EAAAA,oBAAA,G,qCAAiDA,EAAAA,6B,MAAjDA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,sC,uBAK5DA,EAAAA,4BAAA,UAAAA,CAAkH,SACzGA,EAAAA,oBAAA,G,qCAAsDA,EAAAA,4BAC3DA,EAAAA,4BAAA,QAAAA,CAAK,UAEKA,EAAAA,oBAAA,G,6EAAyEA,EAAAA,4BAC/EA,EAAAA,4BAAA,SAA2FA,EAAAA,oBAAA,I,+EAAyEA,EAAAA,4BACpKA,EAAAA,4BAAA,WAAMA,EAAAA,oBAAA,I,+EAAyEA,EAAAA,2BAAAA,M,MAL9EA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,0CAGKA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,IAAAA,EAAAA,yBAAA,+CACqFA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,MAAAA,EAAAA,yBAAA,iDACrFA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,MAAAA,EAAAA,yBAAA,iD,CCTP,IAAMmD,EAAwB,MAA/B,MAAOA,EAET9D,WAAAA,CACWC,EACAqB,GADA,KAAArB,SAAAA,EACA,KAAAqB,oBAAAA,EAHX,KAAAjB,YAAcA,EAAAA,EAIX,CAEH0D,QAAAA,GACIzD,KAAKgB,oBAAoBgB,kBAC7B,CAEAP,WAAAA,GACIzB,KAAKgB,oBAAoBa,iBAC7B,E,6CAbS2B,GAAwBnD,EAAAA,+BAAAC,EAAAA,GAAAD,EAAAA,+BAAAE,EAAAA,IAAA,E,mDAAxBiD,EAAwBnB,UAAA,uBAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,2VAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDXrCrC,EAAAA,wBAAA,EAAAqD,EAAA,sB,iCAOArD,EAAAA,qCAAA,K,iCACIA,EAAAA,wBAAA,EAAAsD,EAAA,aACAtD,EAAAA,wBAAA,EAAAuD,EAAA,aACJvD,EAAAA,qCAEAA,EAAAA,uBAAA,oB,iCAEAA,EAAAA,wBAAA,EAAAwD,EAAA,e,wCAbexD,EAAAA,wBAAA,OAAAA,EAAAA,yBAAA,IAAAsC,EAAAhD,SAAAM,iBAAA0C,EAAA5C,YAAA+D,eAMDzD,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,WAAAA,EAAAA,yBAAA,IAAAsC,EAAAhD,SAAAM,gBACJI,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,eAAAsC,EAAA5C,YAAAgE,YACA1D,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,eAAAsC,EAAA5C,YAAAiE,SAGI3D,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,MAAAA,EAAAA,yBAAA,KAAAsC,EAAA3B,oBAAAiD,iBAER5D,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAA,EAAAA,yBAAA,KAAAsC,EAAAhD,SAAAM,iBAAA0C,EAAA5C,YAAA+D,e,mhBCHON,CAAwB,K,eCA/B,MAAOU,EACTxE,WAAAA,CACYG,EACAsE,EACAC,EACApD,GAHA,KAAAnB,OAAAA,EACA,KAAAsE,MAAAA,EACA,KAAAC,OAAAA,EACA,KAAApD,oBAAAA,CACT,CAGGc,KAAAA,GAAK,IAAAH,EAAA,YAAAC,EAAAA,EAAAA,IAAC,kBACFD,EAAKX,oBAAoBc,QAC/BH,EAAK9B,OAAOM,SAAS,CAAC,YAAa,CAAEkE,WAAY1C,EAAKwC,OAAS,GAFxDvC,EAGX,E,sCAZSsC,GAA0B7D,EAAAA,+BAAAC,EAAAA,QAAAD,EAAAA,+BAAAC,EAAAA,gBAAAD,EAAAA,+BAAAE,EAAAA,GAAAF,EAAAA,+BAAAG,EAAAA,IAAA,E,mDAA1B0D,EAA0B7B,UAAA,mBAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,kjBAAAC,SAAA,SAAAC,EAAAC,G,GAAA,EAAAD,ICXvCrC,EAAAA,uBAAA,gBACAA,EAAAA,4BAAA,UAAAA,CAA0B,WACQA,EAAAA,oBAAA,G,qCAA4CA,EAAAA,4BAC1EA,EAAAA,4BAAA,WAAiCA,EAAAA,oBAAA,G,qCAA+CA,EAAAA,4BAChFA,EAAAA,4BAAA,sBACIA,EAAAA,oBAAA,I,+EACAA,EAAAA,4BAAA,UACIA,EAAAA,oBAAA,I,+EACJA,EAAAA,4BACAA,EAAAA,oBAAA,I,+EACJA,EAAAA,4BACAA,EAAAA,4BAAA,eAAkFA,EAAAA,wBAAC,SAAD,kBAASsC,EAAAb,OAAO,IAC9FzB,EAAAA,oBAAA,I,sCACJA,EAAAA,4BACAA,EAAAA,4BAAA,sBAAAA,CAE+B,aACJA,EAAAA,oBAAA,I,sCAA2CA,EAAAA,4BAClEA,EAAAA,4BAAA,UAAKA,EAAAA,oBAAA,I,sCAAsDA,EAAAA,2BAAAA,GAE/DA,EAAAA,4BAAA,YAAAA,CAA0B,WAElBA,EAAAA,uBAAA,kBACAA,EAAAA,oBAAA,I,sCACJA,EAAAA,2BAAAA,M,4EAtB0BA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,kCACGA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,qCAE7BA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,MAAAA,EAAAA,yBAAA,6CAEIA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,MAAAA,EAAAA,yBAAA,6CAEJA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,MAAAA,EAAAA,yBAAA,6CAEgBA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,aAAAA,CAAgB,YAAAiE,EAAAC,SAChClE,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,4CAGUA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,QAAAmE,EAAAlB,MAAAmB,OAEapE,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,kCAClBA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,6CAKDA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,wC,+5DDJP4C,EAAAA,GAAS,0B,qCEfV5C,EAAAA,4BAAA,SACIA,EAAAA,oBAAA,G,qCACJA,EAAAA,6B,MADIA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,kC,uBAEJA,EAAAA,4BAAA,SACIA,EAAAA,oBAAA,G,qCACJA,EAAAA,6B,MADIA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,kC,0BARRA,EAAAA,4BAAA,cAAAA,CAA4B,SAEpBA,EAAAA,oBAAA,G,qCACJA,EAAAA,4BACAA,EAAAA,wBAAA,EAAAqE,EAAA,WAGArE,EAAAA,wBAAA,EAAAsE,EAAA,WAGJtE,EAAAA,6B,4CARQA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,uCAEAA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,QAAAuE,EAAAxD,aAGAf,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAuE,EAAAxD,Y,ECOD,IAAMyD,EAAyB,MAAhC,MAAOA,EAMTnF,WAAAA,CAAYqB,EAAwBnB,EAAsBD,GAL1D,KAAAmF,UAAoB,EACpB,KAAA1D,aAAuB,EAEf,KAAAE,SAAW,IAAIC,EAAAA,QAGnB3B,EAAUmF,QAAQ9C,MACd+C,EAAAA,EAAAA,mBAAkBrF,EAASM,gBAC3BiC,EAAAA,EAAAA,WAAUlC,KAAKsB,WACjBa,WAAU,EAAE4C,EAAS9E,MACnB,MAAMgF,EAAQ/D,kBAAoBC,EAAAA,GAAAA,WAClCnB,KAAKoB,YAAcnB,IAAkBF,EAAAA,GAAAA,UACrCC,KAAK8E,UAAYG,GAASjF,KAAKoB,cAAgB2D,EAE/ChE,EAAIqB,cAAc,GAE1B,CAEAX,WAAAA,GACIzB,KAAKsB,SAASI,MAClB,E,6CArBSmD,GAAyBxE,EAAAA,+BAAAA,EAAAA,mBAAAA,EAAAA,+BAAAC,EAAAA,GAAAD,EAAAA,+BAAAE,EAAAA,GAAA,E,mDAAzBsE,EAAyBxC,UAAA,wBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,8ZAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDdtCrC,EAAAA,wBAAA,EAAA6E,EAAA,mBAYA7E,EAAAA,uBAAA,oB,KAZYA,EAAAA,wBAAA,OAAAsC,EAAAmC,S,6WCcCD,CAAyB,K,kDCFtBxE,EAAAA,4BAAA,WACIA,EAAAA,oBAAA,G,qCACAA,EAAAA,4BAAA,SAGIA,EAAAA,oBAAA,G,qCACJA,EAAAA,4BACAA,EAAAA,oBAAA,G,qCACAA,EAAAA,4BAAA,SAGIA,EAAAA,oBAAA,G,sCACJA,EAAAA,2BAAAA,I,4CAXAA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,mCAEGA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAuE,EAAAO,aAAAP,EAAAQ,aAAAR,EAAAS,WAAAhF,EAAAA,4BAECA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,iCAEJA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,8BAIIA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,oC,EAQjB,IAAMiF,GAAuB,MAA9B,MAAOA,EAQT5F,WAAAA,CACWE,EACAD,EACC4F,GAFD,KAAA3F,UAAAA,EACA,KAAAD,SAAAA,EACC,KAAA4F,IAAAA,EAVZ,KAAAJ,aAAejE,kBAAoBC,EAAAA,GAAAA,WAC1B,KAAAkE,WAAa,gGAEb,KAAAD,aAAe,qGAEhB,KAAAI,UAAY,IAAIjE,EAAAA,OAMrB,CAEHkC,QAAAA,IACIgC,EAAAA,EAAAA,OAAM,GAAGxD,MACLyD,EAAAA,EAAAA,YAAU,IAAM1F,KAAKuF,IAAII,KAAKC,EAAAA,GAAAA,cAC9BC,EAAAA,EAAAA,aAAW,IAAMC,EAAAA,SACjBC,EAAAA,EAAAA,aAAYC,GAAkBA,EAAc/D,MACxCyD,EAAAA,EAAAA,YAAU,KAAMD,EAAAA,EAAAA,OAAM,WAE1BvD,EAAAA,EAAAA,WAAUlC,KAAKwF,YACjBrD,WACN,CAEAV,WAAAA,GACIzB,KAAKwF,UAAU9D,OACf1B,KAAKwF,UAAUS,UACnB,E,6CA5BSX,GAAuBjF,EAAAA,+BAAAC,EAAAA,GAAAD,EAAAA,+BAAAE,EAAAA,GAAAF,EAAAA,+BAAAG,EAAAA,GAAA,E,mDAAvB8E,EAAuBjD,UAAA,sBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,uPAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IArB5BrC,EAAAA,4BAAA,UAAAA,CAAkC,0B,qCAE1BA,EAAAA,wBAAA,EAAA6F,EAAA,e,iCAcJ7F,EAAAA,2BAAAA,I,MAfoBA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,QAAAA,EAAAA,yBAAA,6BACWA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAA,EAAAA,yBAAA,IAAAsC,EAAA/C,UAAAmF,U,oOAmB9BO,CAAuB,KCf7B,IAAMa,GAAmB,MAA1B,MAAOA,EAMTzG,WAAAA,CAAoB6F,GAAA,KAAAA,IAAAA,EALpB,KAAAtB,eAAiB,IAAImC,EAAAA,gBAA4B,IAEzC,KAAAC,OAAS,EACT,KAAA/E,SAAW,IAAIC,EAAAA,QAGnBvB,KAAKsG,2BACT,CAEA7E,WAAAA,GACIzB,KAAKsB,SAASI,MAClB,CAEQ4E,yBAAAA,IACJb,EAAAA,EAAAA,OAAM,GAAGxD,MACLyD,EAAAA,EAAAA,YAAU,IAAM1F,KAAKuG,cAAc,CAC/BF,OAAQrG,KAAKqG,OACbG,MAAOC,EAAAA,QAEXC,EAAAA,EAAAA,MAAIC,IACA,MAAMC,EAAQD,EAAIE,KAAKD,MACvB5G,KAAKqG,OAASO,EAAMP,OACpB,MAAMS,EAAQF,EAAMG,IAChBD,GACA9G,KAAKiE,eAAevC,KAAK1B,KAAKiE,eAAe+C,WAAWC,OAAO,CAAC,CAACC,KAAMJ,K,KAG/EjB,EAAAA,EAAAA,aAAW,KAAMJ,EAAAA,EAAAA,OApCA,QAqCjB0B,EAAAA,EAAAA,QAAO,CAAEC,MArCQ,OAsCjBlF,EAAAA,EAAAA,WAAUlC,KAAKsB,WACjBa,WACN,CAEQoE,aAAAA,EAAc,OAACF,EAAM,MAAEG,IAO3B,OAAOxG,KAAKuF,IAAI8B,IANEC,EAAEjB,SAAQG,YAA4C,CAEpEe,OAAQ,CAAC,YAAa,UACtBC,OAAQ,CAAEnB,SAAQG,aAGQ,GAAO,EAA9BxG,CAAqC,CAAEqG,SAAQG,SAC1D,E,6CA1CSL,GAAmB9F,EAAAA,+BAAAC,EAAAA,GAAA,E,mDAAnB6F,EAAmB9D,UAAA,kBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,+BAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IChBhCrC,EAAAA,4BAAA,WAAoBA,EAAAA,oBAAA,G,qCAA0CA,EAAAA,4BAE9DA,EAAAA,uBAAA,oB,wCAFoBA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,+BAENA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,MAAAA,EAAAA,yBAAA,IAAAsC,EAAAsB,iB,iMDcDkC,CAAmB,KEHhC,MAAMsB,GAAiB,CAAC,CACpBC,KAAM,GACNC,UAAWzE,EACXpD,YAAa,CAACL,GACdmI,SAAU,CAAC,CACPF,KAAM,GACNG,UAAW,OACXF,UAAWzD,GACZ,CACCwD,KAAM,kBACNC,UAAWrC,IACZ,CACCoC,KAAM,WACNC,UAAW9C,EACX+C,SAAU,CAAC,CACPF,KAAM,GACNG,UAAW,OACXC,WAAY,UACb,CACCJ,KAAM,MACNC,UAAWnE,GACZ,CACCkE,KAAM,SACNC,UAAWI,EAAAA,IACZ,CACCL,KAAM,cACNC,UAAWxB,SAShB,IAAM6B,GAAyB,MAAhC,MAAOA,GAFa,O,sCAEbA,EAAyB,E,kDAAzBA,I,sDAHCC,EAAAA,aAAAA,SAAsBR,IACtBQ,EAAAA,gBAEDD,CAAyB,K,4BCgB/B,IAAME,GAAkB,MAAzB,MAAOA,GAHO,O,sCAGPA,EAAkB,E,kDAAlBA,I,uDARE,CACPzI,EACA2D,EAAAA,IACH+E,QAAA,CA3BGH,GACAI,EAAAA,kBACAC,EAAAA,cACAC,EAAAA,gBACAC,EAAAA,aACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,GAAAA,EACAC,EAAAA,EACAC,GAAAA,EAiBAd,EAAAA,gBAGKC,CAAkB,I,mHCvDxB,MAEMzB,EAAiB,QAGvB,IAAMrD,EAAmB,MAA1B,MAAOA,EA6CT1D,WAAAA,CACYG,EACAF,EACAqJ,GAFA,KAAAnJ,OAAAA,EACA,KAAAF,SAAAA,EACA,KAAAqJ,2BAAAA,EA/CZ,KAAA/E,eAAiB,IAAImC,EAAAA,gBAA4B,IACjD,KAAA6C,iBAAmB,EACX,KAAAC,eAAgBzD,EAAAA,EAAAA,OAAM,GAAGxD,MAC7ByD,EAAAA,EAAAA,YAAU,IAAM1F,KAAKgJ,2BAA2BG,OAAO,CACnD9C,OAAQrG,KAAKqG,OACbG,MAAOC,OAEXC,EAAAA,EAAAA,MAAIC,IACA,MAAMC,EAAQD,EAAIE,KAAKD,MACjBwC,EAAaxC,EAAMP,OAASrG,KAAKqG,OACvCrG,KAAKqG,OAASO,EAAMP,OACpB,MAAMS,EAAQF,EAAMG,IAChBD,GACA9G,KAAKiE,eAAevC,KAAK1B,KAAKiE,eAAe+C,WAAWC,OAAO,CAAC,CAACC,KAAMJ,MAExD,IAAfsC,GAAoBpJ,KAAKL,SAASM,cAAcC,QAAUH,EAAAA,GAAAA,YAC1DC,KAAK6B,kBAEL7B,KAAKL,SAASM,cAAcC,QAAUH,EAAAA,GAAAA,IACtCC,KAAKH,OAAOM,SAAS,CAAC,KAAM,CACxBC,YAAY,G,KAIxByF,EAAAA,EAAAA,aAAW,KAAMJ,EAAAA,EAAAA,OA9BW,QA+B5B0B,EAAAA,EAAAA,QAAO,CAAEC,MA/BmB,OAiCxB,KAAAiC,gBAAiB5D,EAAAA,EAAAA,OAAM,GAAGxD,MAC9ByD,EAAAA,EAAAA,YAAU,IAAM1F,KAAKgJ,2BAA2BG,OAAO,CACnD9C,OAAQrG,KAAKqG,OACbG,MAAOC,OAEXC,EAAAA,EAAAA,MAAIC,IACI3G,KAAKL,SAASM,cAAcC,QAAUH,EAAAA,GAAAA,YACtCC,KAAKsJ,oB,KAGbzD,EAAAA,EAAAA,aAAW,KAAMJ,EAAAA,EAAAA,OA1Cc,QA2C/B0B,EAAAA,EAAAA,QAAO,CAAEC,MA3CsB,OA6C3B,KAAAmC,yBAA2BC,EAAAA,aAAAA,MAC3B,KAAAC,4BAA8BD,EAAAA,aAAAA,MAC9B,KAAAnD,OAAS,CAMd,CAEHvE,KAAAA,GAGI,OAFA9B,KAAKqG,OAAS,EACdrG,KAAKiE,eAAevC,KAAK,IAClB1B,KAAKgJ,2BAA2BlH,OAC3C,CAEAE,gBAAAA,GACIhC,KAAKuJ,yBAA2BvJ,KAAKkJ,cAAc/G,WACvD,CAEAuH,mBAAAA,GACI1J,KAAKyJ,4BAA8BzJ,KAAKqJ,eAAelH,WAC3D,CAEAN,eAAAA,GACI7B,KAAKuJ,yBAAyBI,aAClC,CAEAL,kBAAAA,GACItJ,KAAKyJ,4BAA4BE,aACrC,EAvE4B,O,sCAAnBvG,GAAmB/C,EAAAA,sBAAAC,EAAAA,QAAAD,EAAAA,sBAAAE,EAAAA,GAAAF,EAAAA,sBAAAG,EAAAA,GAAA,E,sDAAnB4C,EAAmB3C,QAAnB2C,EAAmB1C,YAAnB0C,CAAmB,I,0PCTpB/C,EAAAA,4BAAA,UAAAA,CAA0C,UAA1CA,CAA0C,WAG9BA,EAAAA,oBAAA,G,qCACJA,EAAAA,4BACAA,EAAAA,4BAAA,WACIA,EAAAA,oBAAA,G,qCACJA,EAAAA,2BAAAA,GAEJA,EAAAA,uBAAA,2BACJA,EAAAA,6B,MAVwBA,EAAAA,wBAAA,uBAAAuJ,GAGZvJ,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,yCAGAA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,wC,uBAOZA,EAAAA,4BAAA,WACIA,EAAAA,uBAAA,2BACAA,EAAAA,4BAAA,UAAAA,CAA+B,WAEvBA,EAAAA,oBAAA,G,qCACJA,EAAAA,4BACAA,EAAAA,4BAAA,WACIA,EAAAA,oBAAA,G,qCACJA,EAAAA,2BAAAA,M,MARgBA,EAAAA,wBAAA,uBAAAuJ,GAIZvJ,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,wCAGAA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,uC,uBAMZA,EAAAA,4BAAA,UAAAA,CAA0C,UAA1CA,CAA0C,WAG9BA,EAAAA,oBAAA,G,qCACJA,EAAAA,4BACAA,EAAAA,4BAAA,WACIA,EAAAA,oBAAA,G,qCACJA,EAAAA,2BAAAA,GAEJA,EAAAA,uBAAA,2BACJA,EAAAA,6B,MAVwBA,EAAAA,wBAAA,uBAAAuJ,GAGZvJ,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,uCAGAA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,sC,uBAOZA,EAAAA,4BAAA,WACIA,EAAAA,uBAAA,2BACAA,EAAAA,4BAAA,UAAAA,CAA+B,WAEvBA,EAAAA,oBAAA,G,qCACJA,EAAAA,4BACAA,EAAAA,4BAAA,WACIA,EAAAA,oBAAA,G,qCACJA,EAAAA,2BAAAA,M,MARgBA,EAAAA,wBAAA,uBAAAuJ,GAIZvJ,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,yCAGAA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,wC,uBAMZA,EAAAA,4BAAA,UAAAA,CAA0C,UAA1CA,CAA0C,WAG9BA,EAAAA,oBAAA,G,qCACJA,EAAAA,4BACAA,EAAAA,4BAAA,WAAAA,CAA4B,QAA5BA,CAA4B,YAEeA,EAAAA,oBAAA,G,qCAAgDA,EAAAA,4BACnFA,EAAAA,4BAAA,YAA4BA,EAAAA,oBAAA,I,sCAA4CA,EAAAA,2BAAAA,GAE5EA,EAAAA,4BAAA,SAAAA,CAAK,aACkCA,EAAAA,oBAAA,I,sCAAgDA,EAAAA,4BACnFA,EAAAA,4BAAA,YAA4BA,EAAAA,oBAAA,I,sCAA4CA,EAAAA,2BAAAA,U,MAZhEA,EAAAA,wBAAA,uBAAAuJ,GAGZvJ,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,qCAIuCA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,qCACPA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,mCAGOA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,uCACPA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,mC,uBAO5CA,EAAAA,4BAAA,UAAAA,CAA0C,UAA1CA,CAA0C,WAECA,EAAAA,oBAAA,G,qCAAiDA,EAAAA,4BACpFA,EAAAA,4BAAA,WACIA,EAAAA,oBAAA,G,qCACJA,EAAAA,2BAAAA,M,MALgBA,EAAAA,wBAAA,uBAAAuJ,GAEmBvJ,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,sCAE/BA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,yC,0BA/EpBA,EAAAA,4BAAA,WAEIA,EAAAA,wBAAA,EAAAwJ,EAAA,qB,iCACAxJ,EAAAA,wBAAA,EAAAyJ,EAAA,yBAAAzJ,EAAAA,qCAaAA,EAAAA,wBAAA,EAAA0J,EAAA,yBAAA1J,EAAAA,qCAaAA,EAAAA,wBAAA,EAAA2J,EAAA,yBAAA3J,EAAAA,qCAaAA,EAAAA,wBAAA,EAAA4J,EAAA,yBAAA5J,EAAAA,qCAaAA,EAAAA,wBAAA,GAAA6J,EAAA,2BAAA7J,EAAAA,qCAmBAA,EAAAA,wBAAA,GAAA8J,EAAA,yBAAA9J,EAAAA,qCAUJA,EAAAA,6B,4CAlFiBA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,mBAAAA,EAAAA,yBAAA,IAAAuE,EAAAwF,c,wBAoFb/J,EAAAA,4BAAA,YAA+CA,EAAAA,oBAAA,G,qCAA4CA,EAAAA,6B,MAA5CA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,iC,CCvEhD,MAAMgK,EAAmB,IACnBC,EAAwC,IAAnBD,EAwB3B,IAAMtC,EAA2B,MAAlC,MAAOA,EAgBTrI,WAAAA,CACWE,EACC2F,EACD5F,EACCqB,GAHD,KAAApB,UAAAA,EACC,KAAA2F,IAAAA,EACD,KAAA5F,SAAAA,EACC,KAAAqB,oBAAAA,EAlBZ,KAAAoJ,cAAe3E,EAAAA,EAAAA,OAAM,EAAG4E,GAAkBpI,MACtCsI,EAAAA,EAAAA,MAAI,KACA,MAAMC,EAAcxK,KAAKgB,oBAAoBiI,iBAAmBjJ,KAAKyK,OAAOC,OAC5E,OAAO1K,KAAKyK,OAAOE,UAAUH,EAAY,KAE7C9D,EAAAA,EAAAA,MAAI,KACA1G,KAAKgB,oBAAoBiI,kBAAoB,CAAC,KAGtD,KAAAhI,KAAOC,kBAAoBC,EAAAA,GAAAA,UAC3B,KAAApB,YAAcA,EAAAA,GAEN,KAAAyF,UAAY,IAAIjE,EAAAA,QAQpBvB,KAAK4K,qBACT,CAEAnJ,WAAAA,GAEIzB,KAAKgB,oBAAoBiI,kBAAoB,EAE7CjJ,KAAKwF,UAAU9D,OACf1B,KAAKwF,UAAUS,UACnB,CAEQ2E,mBAAAA,IACJnF,EAAAA,EAAAA,OAAM,GAAGxD,MACLyD,EAAAA,EAAAA,YAAU,IAAM1F,KAAKuF,IAAII,KAAKC,EAAAA,GAAAA,eAAsBgE,GAAW,GAAO,MACtE/D,EAAAA,EAAAA,aAAW,IAAMC,EAAAA,SACjBqB,EAAAA,EAAAA,QAAO,CAAEC,MA5DkB,OA6D3BlF,EAAAA,EAAAA,WAAUlC,KAAKwF,YACjBrD,WACN,EA1CC,O,sCAEQ4F,GAA2B1H,EAAAA,+BAAAC,EAAAA,GAAAD,EAAAA,+BAAAE,EAAAA,GAAAF,EAAAA,+BAAAG,EAAAA,GAAAH,EAAAA,+BAAAwK,EAAAA,IAAA,E,mDAA3B9C,EAA2B1F,UAAA,0BAAAyI,UAAA,SAAApI,EAAAC,G,GAAA,EAAAD,G,2uBDzCxCrC,EAAAA,4BAAA,WACIA,EAAAA,wBAAA,EAAA0K,EAAA,c,kEAqFA1K,EAAAA,wBAAA,EAAA2K,EAAA,yBAAA3K,EAAAA,qCAGJA,EAAAA,6B,2CAvFUA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAA,EAAAA,yBAAA,IAAAsC,EAAA/C,UAAAmF,YAAApC,EAAA1B,MAAAZ,EAAAA,yBAAA,IAAAsC,EAAAhD,SAAAM,iBAAA0C,EAAA5C,YAAAkL,WAAA5K,CAAwG,WAAAmE,E,inECuBlG,EAER0G,EAAAA,EAAAA,SACI,iBAAkB,EACdC,EAAAA,EAAAA,YAAW,SAAU,EACjBC,EAAAA,EAAAA,OAAM,CAAEC,QAAS,KACjBC,EAAAA,EAAAA,SAAQ,GAAGhB,OAAwBc,EAAAA,EAAAA,OAAM,CAAEC,QAAS,MACpDC,EAAAA,EAAAA,SACI,GAAGhB,OAAwBD,EAAmB,EAAIC,OAClDc,EAAAA,EAAAA,OAAM,CAAEC,QAAS,aAO5BtD,CAA2B,I,0EC1BjC,IAAMwD,EAAyB,MAAhC,MAAOA,EAZb7L,WAAAA,GAaa,KAAA8L,MAAgB,E,+CADhBD,EAAyB,E,mDAAzBA,EAAyBlJ,UAAA,yBAAAoJ,OAAA,CAAAD,MAAA,SAAAE,mBAAAC,EAAArJ,MAAA,EAAAC,KAAA,EAAAC,OAAA,qGAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,I,iCAT9BrC,EAAAA,4BAAA,WACIA,EAAAA,uBAAA,gBACAA,EAAAA,4BAAA,WAAmCA,EAAAA,oBAAA,GAAWA,EAAAA,4BAC9CA,EAAAA,0BAAA,GACJA,EAAAA,6B,MAFuCA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAsC,EAAA6I,O,4YAOlCD,CAAyB,I,wECE/B,IAAM1C,EAA0B,MAAjC,MAAOA,GAPQ,O,sCAORA,EAA0B,E,kDAA1BA,I,sDARLN,EAAAA,aACAF,EAAAA,iBAOKQ,CAA0B,I,2GCT/BxI,EAAAA,uBAAA,Y,yBAAgCA,EAAAA,wBAAA,YAAAuL,EAAA1E,KAAA7G,EAAAA,4B,ECKjC,IAAMwL,EAAe,MAAtB,MAAOA,EACT,OAAa9E,CAAIA,GACb/G,KAAK8L,KAAO/E,EACZgF,YAAW,IAAM/L,KAAKgM,kBAC1B,CACA,OAAIjF,GACA,OAAO/G,KAAK8L,IAChB,CAGAE,cAAAA,GACIhM,KAAKiM,UAAUC,cAAcC,UAAYnM,KAAKiM,UAAUC,cAAcE,YAC1E,E,6CAZSP,EAAe,E,mDAAfA,EAAexJ,UAAA,mBAAAyI,UAAA,SAAApI,EAAAC,G,GAAA,EAAAD,G,uTDb5BrC,EAAAA,4BAAA,YAAAA,CAAmC,WAQ3BA,EAAAA,wBAAA,EAAAgM,EAAA,cACJhM,EAAAA,2BAAAA,I,MAD4BA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,UAAAsC,EAAAoE,K,yrBCKnB8E,CAAe,I,6DCFrB,IAAM9C,EAAgB,MAAvB,MAAOA,GALO,O,sCAKPA,EAAgB,E,kDAAhBA,I,sDALLR,EAAAA,gBAKKQ,CAAgB,I,kDCDtB,IAAMH,EAA2B,MAAlC,MAAOA,G,6CAAAA,EAA2B,E,kDAA3BA,I,gDAAAA,CAA2B,I,6DCQjC,IAAM0D,EAA0B,MAAjC,MAAOA,EAdb5M,WAAAA,GAea,KAAA6M,eAAyB,GAC3B,KAAAC,WAAoBC,EAAAA,EAAAA,K,+CAFlBH,EAA0B,E,mDAA1BA,EAA0BjK,UAAA,yBAAAoJ,OAAA,CAAAc,eAAA,kBAAAjK,MAAA,EAAAC,KAAA,EAAAC,OAAA,0FAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAX/BrC,EAAAA,4BAAA,UAAAA,CAAoC,WAE5BA,EAAAA,uBAAA,WAAAA,CAAuC,WAAvCA,CAAuC,YAG3CA,EAAAA,4BACAA,EAAAA,uBAAA,WACJA,EAAAA,6B,MADSA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,MAAAsC,EAAA6J,UAAA,IAAA7J,EAAA4J,eAAA,OAAAlM,EAAAA,4B,swCAKJiM,CAA0B,I","sources":["./src/app/components/installation/installation.guard.ts","./src/app/components/installation/header/installation-header.component.html","./src/app/components/installation/header/installation-header.component.ts","./src/app/components/installation/installation.component.ts","./src/app/components/installation/log/installation-log.component.html","./src/app/components/installation/log/installation-log.component.ts","./src/app/components/installation/start/installation-start.component.ts","./src/app/components/installation/start/installation-start.component.html","./src/app/components/installation/tabs/installation-tabs.component.html","./src/app/components/installation/tabs/installation-tabs.component.ts","./src/app/components/installation/stopped-service/stopped-service.component.ts","./src/app/components/installation/upgrade-log/upgrade-log.component.ts","./src/app/components/installation/upgrade-log/upgrade-log.component.html","./src/app/components/installation/installation-routing.module.ts","./src/app/components/installation/installation.module.ts","./src/app/components/installation/installation.service.ts","./src/app/components/installation/slider/installation-slider.component.html","./src/app/components/installation/slider/installation-slider.component.ts","./src/app/utils/blocked-ui-message/blocked-ui-message.component.ts","./src/app/utils/blocked-ui-message/blocked-ui-message.module.ts","./src/app/utils/log-box/log-box.component.html","./src/app/utils/log-box/log-box.component.ts","./src/app/utils/log-box/log-box.module.ts","./src/app/utils/preview-screenshot/module.ts","./src/app/utils/preview-screenshot/preview-screenshot.component.ts"],"sourcesContent":["import { CanActivate, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AgentStatus } from '@imunify360-api/misc';\nimport { AuthState } from 'app/services/auth-state';\nimport { AppState } from 'app/core/app.service';\n\n\n@Injectable()\nexport class InstallationGuard implements CanActivate {\n    constructor (\n        private appState: AppState,\n        public authState: AuthState,\n        private router: Router,\n    ) {}\n\n    canActivate() {\n        if (AgentStatus.OK === this.appState.imunifyStatus.value) {\n            this.router.navigate(['/'], { replaceUrl: true });\n            return false;\n        }\n        return true;\n    }\n}\n","<div class=\"installation-header\">\n    <div>\n        <mat-icon class=\"i360-logo\"\n                  *ngIf=\"!isAv || isUpgrading\"\n                  [svgIcon]=\"'logo-imunify'\">\n        </mat-icon>\n        <mat-icon class=\"i360-logo imunifyav-logo\"\n                  *ngIf=\"isAv && !isUpgrading\"\n                  [svgIcon]=\"'logo-imunifyAV'\">\n        </mat-icon>\n        <div class=\"i360-logo-description\">{{ 'installation.start.logoDescription' | translate }}</div>\n    </div>\n    <div *ngIf=\"imunifyStatus === AgentStatus.FAILED_TO_INSTALL\"\n         class=\"installation-header_status-stopped\">\n        <div class=\"i360-stopped\" i360-button [round]=\"true\">\n            <mat-icon matPrefix>error_outline</mat-icon>\n            {{ 'installation.status.stopped' | translate }}\n        </div>\n\n        <button class=\"i360-retry\" i360-button [primary]=\"true\" (click)=\"handleRetryBtnClick()\">\n            <mat-icon matPrefix\n                      fontSet=\"i360-icon\"\n                      fontIcon=\"i360-icon-refresh\"></mat-icon>\n            {{ 'installation.status.retry' | translate }}\n        </button>\n    </div>\n\n    <div *ngIf=\"isInstalling || isUpgrading\"\n         class=\"i360-progress\"\n         i360-button\n         [primary]=\"true\"\n         [round]=\"true\">\n        <spinner [show]=\"true\" color=\"white\" matPrefix></spinner>\n        {{ \"installation.statusMessage\" | translate }}\n    </div>\n</div>\n","import { Component, ViewEncapsulation, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Package } from '@imunify360-api/license';\nimport { AgentStatus } from '@imunify360-api/misc';\nimport { AppState } from 'app/core/app.service';\n\nimport { Router } from '@angular/router';\nimport { useLoader } from 'app/utils/loader/decorators';\nimport { InstallationService } from 'app/components/installation/installation.service';\nimport { takeUntil, Subject } from 'rxjs';\n\n\n@Component({\n    selector: 'installation-header',\n    templateUrl: './installation-header.component.html',\n    styleUrls: ['./installation-header.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InstallationHeaderComponent implements OnDestroy {\n    isAv = IMUNIFY_PACKAGE === Package.imunifyAV;\n    AgentStatus = AgentStatus;\n    imunifyStatus: AgentStatus;\n    isUpgrading= false;\n    isInstalling = false;\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        private cdr: ChangeDetectorRef,\n        public appState: AppState,\n        private router: Router,\n        private installationService: InstallationService,\n    ) {\n        this.listenImunifyStatus();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n    }\n\n    @useLoader\n    async handleRetryBtnClick() {\n        // this line fixes should cancel log request if retry button was clicked\n        this.installationService.stopWatchingLog();\n        await this.installationService.start();\n        if (this.router.url === '/installation/progress/log') {\n            this.installationService.startWatchingLog();\n        }\n    }\n\n    private listenImunifyStatus(): void {\n        this.appState.imunifyStatus\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(imunifyStatus => {\n                this.imunifyStatus = imunifyStatus;\n                this.isInstalling = imunifyStatus === AgentStatus.INSTALLING;\n                this.isUpgrading = imunifyStatus === AgentStatus.UPGRADING;\n                this.cdr.markForCheck();\n            });\n    }\n}\n","import { Component } from '@angular/core';\nimport { InstallationService } from 'app/components/installation/installation.service';\n\n@Component({\n    template: `\n        <div i360Loader>\n            <installation-header></installation-header>\n            <router-outlet></router-outlet>\n        </div>`,\n    providers: [\n        // declared here to preserve service's internal state when switching between the tabs\n        InstallationService,\n    ],\n})\nexport class InstallationComponent {}\n","<i360-message #message\n              *ngIf=\"(appState.imunifyStatus|async) === AgentStatus.NOT_INSTALLED\"\n              icon=\"icon-info\"\n              [theme]=\"message.Theme.blue\">\n    {{ 'installation.cancelled.messageText' | translate }}\n</i360-message>\n\n<ng-container [ngSwitch]=\"appState.imunifyStatus|async\">\n    <div *ngSwitchCase=\"AgentStatus.INSTALLING\" role=\"heading\">{{ 'installation.log.title' | translate }}</div>\n    <div *ngSwitchCase=\"AgentStatus.STOPPED\" role=\"heading\">{{ 'installation.log.titleStopped' | translate }}</div>\n</ng-container>\n\n<i360-log-box [log]=\"installationService.accumulatedLog | async\"></i360-log-box>\n\n<div *ngIf=\"(appState.imunifyStatus|async) === AgentStatus.NOT_INSTALLED\" class=\"installation-log_cancelled-hint\">\n    <div>{{ 'installation.cancelled.hint.retry' | translate  }}</div>\n    <div>\n        <!--Without spans there would be blank space around the middle span which looks awkward-->\n        <span>{{ 'installation.cancelled.hint.support' | translate | translateCut: 0 }}</span>\n        <a class=\"i360-dashboard-link\" href=\"https://cloudlinux.zendesk.com/hc/en-us/requests/new\">{{ 'installation.cancelled.hint.support' | translate | translateCut: 1 }}</a>\n        <span>{{ 'installation.cancelled.hint.support' | translate | translateCut: 2 }}</span>\n    </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AgentStatus } from '@imunify360-api/misc';\nimport { AppState } from 'app/core/app.service';\nimport { InstallationService } from 'app/components/installation/installation.service';\n\n\n@Component({\n    selector: 'installation-log',\n    templateUrl: './installation-log.component.html',\n    styleUrls: ['./installation-log.component.scss'],\n})\nexport class InstallationLogComponent implements OnInit, OnDestroy {\n    AgentStatus = AgentStatus;\n    constructor(\n        public appState: AppState,\n        public installationService: InstallationService,\n    ) {}\n\n    ngOnInit(): void {\n        this.installationService.startWatchingLog();\n    }\n\n    ngOnDestroy(): void {\n        this.installationService.stopWatchingLog();\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { useLoader } from 'app/utils/loader/decorators';\nimport { LoaderDirective } from 'app/utils/loader/loader.directive';\nimport { InstallationService } from '../installation.service';\n\n@Component({\n    templateUrl: './installation-start.component.html',\n    styleUrls: ['./installation-start.component.scss'],\n})\nexport class InstallationStartComponent {\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private loader: LoaderDirective,\n        private installationService: InstallationService,\n    ) {}\n\n    @useLoader\n    async start() {\n        await this.installationService.start();\n        this.router.navigate(['progress'], { relativeTo: this.route });\n    }\n}\n","<mat-icon svgIcon=\"shield\" class=\"i360-shield\"></mat-icon>\n<div class=\"i360-wrapper\">\n    <div class=\"i360-start-title\">{{ 'installation.start.title' | translate }}</div>\n    <div class=\"i360-start-subtitle\">{{ 'installation.start.subtitle' | translate }}</div>\n    <mat-checkbox #eula color=\"primary\" id=\"start-checkbox\">\n        {{ 'installation.start.checkbox' | translate | translateCut: 0 }}\n        <a class=\"i360-dashboard-link\" href=\"https://www.imunify360.com/legal/eula\" target=\"_blank\">\n            {{ 'installation.start.checkbox' | translate | translateCut: 1 }}\n        </a>\n        {{ 'installation.start.checkbox' | translate | translateCut: 2 }}\n    </mat-checkbox>\n    <button i360-button [primary]=\"true\" id=\"start-button\" [disabled]=\"!eula.checked\" (click)=\"start()\">\n        {{ 'installation.start.buttonText' | translate }}\n    </button>\n    <i360-message #message\n                  [theme]=\"message.Theme.white\"\n                  icon=\"icon-info\">\n        <div class=\"i360-note\">{{ 'installation.start.note' | translate }}</div>\n        <div>{{ 'installation.start.noteDescription' | translate }}</div>\n    </i360-message>\n    <div class=\"i360-support\">\n        <a class=\"i360-dashboard-link\" href=\"https://cloudlinux.zendesk.com/hc/requests/new\" target=\"_blank\">\n            <mat-icon fontSet=\"i360-icon\" fontIcon=\"i360-icon-arrow-right\"></mat-icon>\n            {{ 'installation.start.support' | translate }}\n        </a>\n    </div>\n</div>","<i360-tabs *ngIf=\"showTabs\">\n    <a routerLink=\"slides\" routerLinkActive=\"active\" id=\"i360-slides-tab\">\n        {{ 'installation.tabs.features' | translate }}\n    </a>\n    <a *ngIf=\"!isUpgrading\" routerLink=\"log\" routerLinkActive=\"active\" id=\"i360-log-tab\">\n        {{ 'installation.tabs.log' | translate }}\n    </a>\n    <a *ngIf=\"isUpgrading\" routerLink=\"upgrade-log\" routerLinkActive=\"active\" id=\"i360-upgrade-log-tab\">\n        {{ 'installation.tabs.log' | translate }}\n    </a>\n</i360-tabs>\n\n<router-outlet></router-outlet>\n","import { Component, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Package } from '@imunify360-api/license';\nimport { AuthState } from 'app/services/auth-state';\nimport { AppState } from 'app/core/app.service';\nimport { AgentStatus } from '@imunify360-api/misc';\nimport { combineLatestWith, takeUntil, Subject } from 'rxjs';\n\n\n@Component({\n    selector: 'installation-tabs',\n    templateUrl: './installation-tabs.component.html',\n    styleUrls: ['./installation-tabs.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InstallationTabsComponent implements OnDestroy {\n    showTabs: boolean = false;\n    isUpgrading: boolean = false;\n\n    private destroy$ = new Subject<void>();\n\n    constructor(cdr: ChangeDetectorRef, authState: AuthState, appState: AppState) {\n        authState.isAdmin.pipe(\n            combineLatestWith(appState.imunifyStatus),\n            takeUntil(this.destroy$),\n        ).subscribe(([isAdmin, imunifyStatus]) => {\n            const is360 = IMUNIFY_PACKAGE === Package.imunify360;\n            this.isUpgrading = imunifyStatus === AgentStatus.UPGRADING;\n            this.showTabs = (is360 || this.isUpgrading) && isAdmin;\n\n            cdr.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next();\n    }\n}\n","import { AuthState } from 'app/services/auth-state';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { timer, EMPTY, Subject, catchError, repeatWhen, switchMap, takeUntil } from 'rxjs';\nimport { LicenseAPI, Package } from '@imunify360-api/license';\nimport { AppState } from 'app/core/app.service';\nimport { XHR } from 'app/utils/xhr/xhr';\n\n@Component ({\n    selector: 'stopped-service',\n    template: `\n        <div class=\"i360-stopped-wrapper\">\n            <blocked-ui-message [title]=\"'stoppedService.title' | translate\">\n                <div class=\"message-text\" *ngIf=\"authState.isAdmin|async\">\n                    {{ 'stoppedService.message' | translate }}\n                    <a class=\"i360-dashboard-link\"\n                       [href]=\"is360Package ? docsI360Link : docsAvLink\"\n                       target=\"_blank\">\n                        {{ 'stoppedService.guide' | translate }}\n                    </a>\n                    {{ 'stoppedService.or' | translate }}\n                    <a class=\"i360-dashboard-link\"\n                       href=\"https://cloudlinux.zendesk.com/hc/requests/new\"\n                       target=\"_blank\">\n                        {{ 'stoppedService.support' | translate }}\n                    </a>\n                </div>\n            </blocked-ui-message>\n        </div>\n    `,\n    styleUrls: ['./stopped-service.component.scss'],\n})\nexport class StoppedServiceComponent implements OnInit, OnDestroy {\n    is360Package = IMUNIFY_PACKAGE === Package.imunify360;\n    readonly docsAvLink = 'https://docs.imunifyav.com/faq_and_known_issues' +\n        '/#imunify-agent-is-not-running-troubleshooting';\n    readonly docsI360Link = 'https://docs.imunify360.com/faq_and_known_issues/' +\n        '#_23-imunify-agent-is-not-running-troubleshooting';\n    private destroyed = new Subject<void>();\n\n    constructor(\n        public authState: AuthState,\n        public appState: AppState,\n        private xhr: XHR,\n    ) {}\n\n    ngOnInit(): void {\n        timer(0).pipe(\n            switchMap(() => this.xhr.post(LicenseAPI.version())),\n            catchError(() => EMPTY),\n            repeatWhen((notifications) => notifications.pipe(\n                switchMap(() => timer(10000)),\n            )),\n            takeUntil(this.destroyed),\n        ).subscribe();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n}\n\n","import { Component, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { timer, switchMap, tap, catchError, BehaviorSubject, Subject, takeUntil, repeat } from 'rxjs';\nimport { LogChunk } from 'app/utils/log-box/log-box.component';\nimport { InstallationStatus } from '@imunify360-api/installation';\nimport { ExtendedRequestParams, DataFrom, AgentResponse } from '@imunify360-api/misc';\nimport { XHR } from 'app/utils/xhr/xhr';\nimport { LOG_CHUNK_SIZE } from 'app/components/installation/installation.service';\n\nconst LOG_REFRESH_INTERVAL = 2000;\n\n@Component({\n    selector: 'upgrade-log',\n    templateUrl: './upgrade-log.component.html',\n    styleUrls: ['./upgrade-log.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpgradeLogComponent implements OnDestroy {\n    accumulatedLog = new BehaviorSubject<LogChunk[]>([]);\n\n    private offset = 0;\n    private destroy$ = new Subject<void>();\n\n    constructor(private xhr: XHR) {\n        this.startPollingUpgradeStatus();\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next();\n    }\n\n    private startPollingUpgradeStatus(): void {\n        timer(0).pipe(\n            switchMap(() => this.upgradeStatus({\n                offset: this.offset,\n                limit: LOG_CHUNK_SIZE,\n            })),\n            tap(res => {\n                const items = res.data.items;\n                this.offset = items.offset;\n                const chunk = items.log;\n                if (chunk) {\n                    this.accumulatedLog.next(this.accumulatedLog.getValue().concat([{text: chunk}]));\n                }\n            }),\n            catchError(() => timer(LOG_REFRESH_INTERVAL)),\n            repeat({ delay: LOG_REFRESH_INTERVAL }),\n            takeUntil(this.destroy$),\n        ).subscribe();\n    }\n\n    private upgradeStatus({offset, limit}: {offset: number, limit: number}) {\n        const statusApi = ({offset, limit}: {offset: number, limit: number}) => <ExtendedRequestParams<\n            DataFrom<AgentResponse<{items: InstallationStatus}>>>> {\n            method: ['upgrading', 'status'],\n            params: { offset, limit },\n        };\n\n        return this.xhr.rx(statusApi, false, false)({ offset, limit });\n    }\n}\n","<div role=\"heading\">{{ 'installation.log.title' | translate }}</div>\n\n<i360-log-box [log]=\"accumulatedLog | async\"></i360-log-box>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { InstallationGuard } from './installation.guard';\nimport { InstallationComponent } from './installation.component';\nimport { InstallationLogComponent } from './log/installation-log.component';\nimport { InstallationSliderComponent } from './slider/installation-slider.component';\nimport { InstallationStartComponent } from './start/installation-start.component';\nimport { InstallationTabsComponent } from './tabs/installation-tabs.component';\nimport { StoppedServiceComponent } from './stopped-service/stopped-service.component';\nimport { UpgradeLogComponent } from './upgrade-log/upgrade-log.component';\n\n\nconst routes: Routes = [{\n    path: '',\n    component: InstallationComponent,\n    canActivate: [InstallationGuard],\n    children: [{\n        path: '',\n        pathMatch: 'full',\n        component: InstallationStartComponent,\n    }, {\n        path: 'stopped-service',\n        component: StoppedServiceComponent,\n    }, {\n        path: 'progress',\n        component: InstallationTabsComponent,\n        children: [{\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'slides',\n        }, {\n            path: 'log',\n            component: InstallationLogComponent,\n        }, {\n            path: 'slides',\n            component: InstallationSliderComponent,\n        }, {\n            path: 'upgrade-log',\n            component: UpgradeLogComponent,\n        }],\n    }],\n}];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class InstallationRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { I360WarningMessageModule } from 'app/utils/warning-message/warning-message.module';\nimport { I360LoaderModule } from 'app/utils/loader/loader.module';\nimport { I360PreviewScreenshotModule } from 'app/utils/preview-screenshot/module';\nimport { I360TranslateModule } from 'app/utils/translate/translate.module';\nimport { I360ButtonModule } from 'app/utils/button/button.module';\n\nimport { I360NavigationTabsModule } from '../navigation-tabs/navigation-tabs.module';\nimport { InstallationGuard } from './installation.guard';\nimport { InstallationRoutingModule } from './installation-routing.module';\nimport { InstallationComponent } from './installation.component';\nimport { InstallationTabsComponent } from './tabs/installation-tabs.component';\nimport { InstallationStartComponent } from './start/installation-start.component';\nimport { InstallationLogComponent } from './log/installation-log.component';\nimport { InstallationSliderComponent } from './slider/installation-slider.component';\nimport { InstallationHeaderComponent } from './header/installation-header.component';\nimport { InstallationService } from './installation.service';\nimport { StoppedServiceComponent } from './stopped-service/stopped-service.component';\nimport {\n    I360BlockedUiMessageModule,\n} from 'app/utils/blocked-ui-message/blocked-ui-message.module';\nimport { I360LogBoxModule } from 'app/utils/log-box/log-box.module';\nimport { UpgradeLogComponent } from './upgrade-log/upgrade-log.component';\n\n@NgModule({\n    imports: [\n        InstallationRoutingModule,\n        MatCheckboxModule,\n        MatIconModule,\n        MatButtonModule,\n        CommonModule,\n        I360ButtonModule,\n        I360LoaderModule,\n        I360WarningMessageModule,\n        I360TranslateModule,\n        I360PreviewScreenshotModule,\n        I360BlockedUiMessageModule,\n        I360NavigationTabsModule,\n        I360LogBoxModule,\n    ],\n    declarations: [\n        InstallationSliderComponent,\n        StoppedServiceComponent,\n        InstallationComponent,\n        InstallationLogComponent,\n        InstallationStartComponent,\n        InstallationTabsComponent,\n        InstallationHeaderComponent,\n        UpgradeLogComponent,\n    ],\n    providers: [\n        InstallationGuard,\n        InstallationService,\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class InstallationModule {}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { timer, BehaviorSubject, Subscription, catchError, switchMap, tap, repeat } from 'rxjs';\nimport { AgentStatus } from '@imunify360-api/misc';\nimport { AppState } from 'app/core/app.service';\nimport { InstallationBackendService } from './installation-backend.service';\nimport { LogChunk } from 'app/utils/log-box/log-box.component';\n\n\nexport const LOG_REFRESH_INTERVAL = 3000;\nexport const STATUS_REFRESH_INTERVAL = 5000;\nexport const LOG_CHUNK_SIZE = 1024 * 1024;\n\n@Injectable()\nexport class InstallationService {\n    accumulatedLog = new BehaviorSubject<LogChunk[]>([]);\n    shownSlidesCount = 0;\n    private logCollector$ = timer(0).pipe(\n        switchMap(() => this.installationBackendService.status({\n            offset: this.offset,\n            limit: LOG_CHUNK_SIZE,\n        })),\n        tap(res => {\n            const items = res.data.items;\n            const offsetDiff = items.offset - this.offset;\n            this.offset = items.offset;\n            const chunk = items.log;\n            if (chunk) {\n                this.accumulatedLog.next(this.accumulatedLog.getValue().concat([{text: chunk}]));\n            }\n            if (offsetDiff === 0 && this.appState.imunifyStatus.value !== AgentStatus.INSTALLING) {\n                this.stopWatchingLog();\n            }\n            if (this.appState.imunifyStatus.value === AgentStatus.OK) {\n                this.router.navigate(['/'], {\n                    replaceUrl: true,\n                });\n            }\n        }),\n        catchError(() => timer(LOG_REFRESH_INTERVAL)),\n        repeat({ delay: LOG_REFRESH_INTERVAL }),\n    );\n    private statusWatcher$ = timer(0).pipe(\n        switchMap(() => this.installationBackendService.status({\n            offset: this.offset,\n            limit: LOG_CHUNK_SIZE,\n        })),\n        tap(res => {\n            if (this.appState.imunifyStatus.value !== AgentStatus.INSTALLING) {\n                this.stopWatchingStatus();\n            }\n        }),\n        catchError(() => timer(STATUS_REFRESH_INTERVAL)),\n        repeat({ delay: STATUS_REFRESH_INTERVAL }),\n    );\n    private logCollectorSubscription = Subscription.EMPTY;\n    private statusCollectorSubscription = Subscription.EMPTY;\n    private offset = 0;\n\n    constructor(\n        private router: Router,\n        private appState: AppState,\n        private installationBackendService: InstallationBackendService,\n    ) {}\n\n    start() {\n        this.offset = 0;\n        this.accumulatedLog.next([]);\n        return this.installationBackendService.start();\n    }\n\n    startWatchingLog() {\n        this.logCollectorSubscription = this.logCollector$.subscribe();\n    }\n\n    startWatchingStatus() {\n        this.statusCollectorSubscription = this.statusWatcher$.subscribe();\n    }\n\n    stopWatchingLog() {\n        this.logCollectorSubscription.unsubscribe();\n    }\n\n    stopWatchingStatus() {\n        this.statusCollectorSubscription.unsubscribe();\n    }\n}\n","<div class=\"i360-installation-wrapper\">\n    <div class=\"i360-installation-slider-wrapper\"\n         *ngIf=\"(authState.isAdmin|async) && (!isAv || (appState.imunifyStatus|async) === AgentStatus.UPGRADING); else textForUser\">\n        <ng-template [ngTemplateOutlet]=\"activeSlide$ | async\"></ng-template>\n        <ng-template #installationSlide>\n            <div class=\"i360-slide\" [@enterAnimation]>\n                <div class=\"i360-preview-info\">\n                    <div role=\"heading\" aria-level=\"1\">\n                        {{ \"installation.dashboard.title\" | translate }}\n                    </div>\n                    <div class=\"i360-paragraph\">\n                        {{ \"installation.dashboard.text\" | translate }}\n                    </div>\n                </div>\n                <preview-screenshot screenshotName=\"dashboard-preview\"></preview-screenshot>\n            </div>\n        </ng-template>\n        <ng-template #installationSlide>\n            <div class=\"i360-slide\" [@enterAnimation]>\n                <preview-screenshot screenshotName=\"license-extension-preview\"></preview-screenshot>\n                <div class=\"i360-preview-info\">\n                    <div role=\"heading\" aria-level=\"1\">\n                        {{ \"installation.firewall.title\" | translate }}\n                    </div>\n                    <div class=\"i360-paragraph\">\n                        {{ \"installation.firewall.text\" | translate }}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #installationSlide >\n            <div class=\"i360-slide\" [@enterAnimation]>\n                <div class=\"i360-preview-info\">\n                    <div role=\"heading\" aria-level=\"1\">\n                        {{ \"installation.malware.title\" | translate }}\n                    </div>\n                    <div class=\"i360-paragraph\">\n                        {{ \"installation.malware.text\" | translate }}\n                    </div>\n                </div>\n                <preview-screenshot screenshotName=\"malware-scanner-preview\"></preview-screenshot>\n            </div>\n        </ng-template>\n        <ng-template #installationSlide>\n            <div class=\"i360-slide\" [@enterAnimation]>\n                <preview-screenshot screenshotName=\"proactive-preview\"></preview-screenshot>\n                <div class=\"i360-preview-info\">\n                    <div role=\"heading\" aria-level=\"1\">\n                        {{ \"installation.proactive.title\" | translate }}\n                    </div>\n                    <div class=\"i360-paragraph\">\n                        {{ \"installation.proactive.text\" | translate }}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #installationSlide>\n            <div class=\"i360-slide\" [@enterAnimation]>\n                <div class=\"i360-preview-info\">\n                    <div role=\"heading\" aria-level=\"1\">\n                        {{ \"installation.patch.title\" | translate }}\n                    </div>\n                    <div class=\"i360-just-text\">\n                        <div>\n                            <div role=\"heading\" aria-level=\"2\">{{ \"installation.patch.subtitle1\" | translate }}</div>\n                            <div class=\"i360-paragraph\">{{ \"installation.patch.text1\" | translate }}</div>\n                        </div>\n                        <div>\n                            <div role=\"heading\" aria-level=\"2\">{{ \"installation.patch.subtitle2\" | translate }}</div>\n                            <div class=\"i360-paragraph\">{{ \"installation.patch.text2\" | translate }}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #installationSlide>\n            <div class=\"i360-slide\" [@enterAnimation]>\n                <div class=\"i360-preview-info\">\n                    <div role=\"heading\" aria-level=\"1\">{{ \"installation.reputation.title\" | translate }}</div>\n                    <div class=\"i360-paragraph\">\n                        {{ \"installation.reputation.text\" | translate }}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n    <ng-template #textForUser>\n        <div class=\"i360-paragraph\" id=\"text-for-user\">{{ \"installation.textForUser\" | translate }}</div>\n    </ng-template>\n</div>\n","import {\n    Component, OnDestroy, QueryList, TemplateRef, ViewChildren, ViewEncapsulation,\n} from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { LicenseAPI, Package } from '@imunify360-api/license';\nimport {\n    timer, EMPTY, Subject, catchError,\n    map, switchMap, takeUntil, tap, repeat\n} from 'rxjs';\nimport { AuthState } from 'app/services/auth-state';\nimport { XHR } from 'app/utils/xhr/xhr';\nimport { InstallationService } from 'app/components/installation/installation.service';\nimport { AppState } from 'app/core/app.service';\nimport { AgentStatus } from '@imunify360-api/misc';\n\n\nexport const REFRESH_INTERVAL = 20000;\nexport const ANIMATION_DURATION = REFRESH_INTERVAL * 0.15;\nexport const STATUS_POLLING_INTERVAL = 5000;\n\n@Component ({\n    selector: 'installation-slider',\n    templateUrl: './installation-slider.component.html',\n    styleUrls: ['./installation-slider.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [ // infinity css animation is more simple but it\n        // can be not synchronized with timer inside component\n        trigger(\n            'enterAnimation', [\n                transition(':enter', [\n                    style({ opacity: 0 }),\n                    animate(`${ANIMATION_DURATION}ms`, style({ opacity: 1 })),\n                    animate(\n                        `${ANIMATION_DURATION}ms ${REFRESH_INTERVAL - 2 * ANIMATION_DURATION}ms`,\n                        style({ opacity: 0 }),\n                    ),\n                ]),\n            ],\n        ),\n    ],\n})\nexport class InstallationSliderComponent implements OnDestroy {\n    @ViewChildren('installationSlide') slides: QueryList<TemplateRef<any>>;\n    activeSlide$ = timer(0, REFRESH_INTERVAL).pipe(\n        map(() => {\n            const slideNumber = this.installationService.shownSlidesCount % this.slides.length;\n            return this.slides.toArray()[slideNumber];\n        }),\n        tap(() => {\n            this.installationService.shownSlidesCount += 1;\n        }),\n    );\n    isAv = IMUNIFY_PACKAGE === Package.imunifyAV;\n    AgentStatus = AgentStatus;\n\n    private destroyed = new Subject<void>();\n\n    constructor(\n        public authState: AuthState,\n        private xhr: XHR,\n        public appState: AppState,\n        private installationService: InstallationService,\n    ) {\n        this.startPollingVersion();\n    }\n\n    ngOnDestroy(): void {\n        // needed to display the last shown slide when switching between the tabs\n        this.installationService.shownSlidesCount -= 1;\n\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    private startPollingVersion(): void {\n        timer(0).pipe(\n            switchMap(() => this.xhr.post(LicenseAPI.version(), undefined, false, false)),\n            catchError(() => EMPTY),\n            repeat({ delay: STATUS_POLLING_INTERVAL }),\n            takeUntil(this.destroyed),\n        ).subscribe();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n\n@Component({\n    selector: 'blocked-ui-message',\n    template: `\n        <div class=\"blocked-ui-message\">\n            <mat-icon svgIcon=\"logo-grey\" class=\"logo-grey\"></mat-icon>\n            <div role=\"heading\" aria-level=\"1\">{{ title }}</div>\n            <ng-content></ng-content>\n        </div>\n    `,\n    styleUrls: ['./blocked-ui-message.component.scss'],\n})\n\nexport class BlockedUiMessageComponent {\n    @Input() title: string = '';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n    BlockedUiMessageComponent,\n} from './blocked-ui-message.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule,\n    ],\n    declarations: [BlockedUiMessageComponent],\n    exports: [\n        BlockedUiMessageComponent,\n    ],\n})\nexport class I360BlockedUiMessageModule {}\n","<div #logOutput class=\"log_output\">\n    <div class=\"inner_log_output\">\n        <!--\n        We have to use innerHTML because acronis installer returns <br/>\n        Chunks are needed for rendering optimization\n        (whole text will not be processed by innerHTML/browser each time)\n        span - inline element needed to allow text to be split in the middle of the world\n        -->\n        <span *ngFor=\"let chunk of log\" [innerHTML]=\"chunk.text\"></span>\n    </div>\n</div>\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\n\n\nexport type LogChunk = {\n    text: string;\n};\n\n\n@Component({\n    selector: 'i360-log-box',\n    templateUrl: './log-box.component.html',\n    styleUrls: ['./log-box.component.scss'],\n})\nexport class LogBoxComponent {\n    @Input() set log(log: LogChunk[]) {\n        this._log = log;\n        setTimeout(() => this.scrollToBottom());\n    }\n    get log() {\n        return this._log;\n    }\n    @ViewChild('logOutput', {static: true}) logOutput: ElementRef<HTMLDivElement>;\n    private _log: LogChunk[];\n    scrollToBottom() {\n        this.logOutput.nativeElement.scrollTop = this.logOutput.nativeElement.scrollHeight;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { LogBoxComponent } from 'app/utils/log-box/log-box.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [LogBoxComponent],\n    exports: [LogBoxComponent],\n})\nexport class I360LogBoxModule {}\n","import { NgModule } from '@angular/core';\nimport { PreviewScreenshotComponent } from './preview-screenshot.component';\n\n\n@NgModule({\n    declarations: [PreviewScreenshotComponent],\n    exports: [\n        PreviewScreenshotComponent,\n    ],\n})\nexport class I360PreviewScreenshotModule {}\n\n","import { Component, Input } from '@angular/core';\nimport { getImagePath } from 'app/core/misc';\n\n\n@Component({\n    selector: 'preview-screenshot',\n    template: `\n        <div class=\"buy_license_screenshot\">\n            <div class=\"screenshot_toolbar\">\n                <span class=\"screenshot_button\"></span>\n                <span class=\"screenshot_button\"></span>\n                <span class=\"screenshot_button\"></span>\n            </div>\n            <img [src]=\"imagePath + '/' + screenshotName + '.png'\">\n        </div>\n    `,\n    styleUrls: ['./preview-screenshot.component.scss'],\n})\nexport class PreviewScreenshotComponent {\n    @Input() screenshotName: string = '';\n    public imagePath: string = getImagePath();\n}\n\n"],"names":["InstallationGuard","constructor","appState","authState","router","canActivate","AgentStatus","this","imunifyStatus","value","navigate","replaceUrl","i0","i1","i2","i3","factory","ɵfac","_r5","ctx_r4","handleRetryBtnClick","InstallationHeaderComponent","cdr","installationService","isAv","IMUNIFY_PACKAGE","Package","isUpgrading","isInstalling","destroy$","Subject","listenImunifyStatus","ngOnDestroy","next","_this","_asyncToGenerator","stopWatchingLog","start","url","startWatchingLog","pipe","takeUntil","subscribe","markForCheck","selectors","decls","vars","consts","template","rf","ctx","InstallationHeaderComponent_mat_icon_2_Template","InstallationHeaderComponent_mat_icon_3_Template","InstallationHeaderComponent_div_7_Template","InstallationHeaderComponent_div_8_Template","FAILED_TO_INSTALL","useLoader","InstallationComponent","features","InstallationService","_r4","Theme","blue","InstallationLogComponent","ngOnInit","InstallationLogComponent_i360_message_0_Template","InstallationLogComponent_div_4_Template","InstallationLogComponent_div_5_Template","InstallationLogComponent_div_8_Template","NOT_INSTALLED","INSTALLING","STOPPED","accumulatedLog","InstallationStartComponent","route","loader","relativeTo","_r0","checked","_r1","white","InstallationTabsComponent_i360_tabs_0_a_4_Template","InstallationTabsComponent_i360_tabs_0_a_5_Template","ctx_r0","InstallationTabsComponent","showTabs","isAdmin","combineLatestWith","is360","InstallationTabsComponent_i360_tabs_0_Template","is360Package","docsI360Link","docsAvLink","StoppedServiceComponent","xhr","destroyed","timer","switchMap","post","LicenseAPI","catchError","EMPTY","repeatWhen","notifications","complete","StoppedServiceComponent_div_3_Template","UpgradeLogComponent","BehaviorSubject","offset","startPollingUpgradeStatus","upgradeStatus","limit","LOG_CHUNK_SIZE","tap","res","items","data","chunk","log","getValue","concat","text","repeat","delay","rx","statusApi","method","params","routes","path","component","children","pathMatch","redirectTo","InstallationSliderComponent","InstallationRoutingModule","RouterModule","InstallationModule","imports","MatCheckboxModule","MatIconModule","MatButtonModule","CommonModule","I360ButtonModule","I360LoaderModule","I360WarningMessageModule","I360TranslateModule","I360PreviewScreenshotModule","I360BlockedUiMessageModule","I360NavigationTabsModule","I360LogBoxModule","installationBackendService","shownSlidesCount","logCollector$","status","offsetDiff","statusWatcher$","stopWatchingStatus","logCollectorSubscription","Subscription","statusCollectorSubscription","startWatchingStatus","unsubscribe","undefined","InstallationSliderComponent_div_1_ng_template_1_Template","InstallationSliderComponent_div_1_ng_template_3_Template","InstallationSliderComponent_div_1_ng_template_5_Template","InstallationSliderComponent_div_1_ng_template_7_Template","InstallationSliderComponent_div_1_ng_template_9_Template","InstallationSliderComponent_div_1_ng_template_11_Template","InstallationSliderComponent_div_1_ng_template_13_Template","activeSlide$","REFRESH_INTERVAL","ANIMATION_DURATION","map","slideNumber","slides","length","toArray","startPollingVersion","i4","viewQuery","InstallationSliderComponent_div_1_Template","InstallationSliderComponent_ng_template_4_Template","UPGRADING","trigger","transition","style","opacity","animate","BlockedUiMessageComponent","title","inputs","ngContentSelectors","_c0","chunk_r2","LogBoxComponent","_log","setTimeout","scrollToBottom","logOutput","nativeElement","scrollTop","scrollHeight","LogBoxComponent_span_3_Template","PreviewScreenshotComponent","screenshotName","imagePath","getImagePath"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}