{"version":3,"file":"campaign-banner-360.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/campaign-banner.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","//                                     Copyright 2024 WebPros International, LLC\n//                                                           All rights Reserved.\n// copyright@cpanel.net                                         http://cpanel.net\n// This code is subject to the cPanel license. Unauthorized copying is prohibited\n\nimport scss from \"./campaign-banner-360.scss\";\n\nconst NVDATA_STORE = \"campaign-banner\";\n\nconst eventNameRules = [\n    {\n        name: \"close.click\",\n        pattern: /--track-close$/,\n    },\n    {\n        name: \"conversion.click\",\n        pattern: /--track-learnmore-button$/,\n    },\n    {\n        name: \"survey-yes.click\",\n        pattern: /--track-survey-yes$/,\n    },\n    {\n        name: \"survey-no.click\",\n        pattern: /--track-survey-no$/,\n    },\n];\n\nconst application = \"WHM\";\nconst appKey = \"home\";\n\nexport class CampaignBanner360 extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: \"open\" });\n    }\n\n    /**\n     * Web Component lifecycle method\n     * Called each time the element is added to the document\n     */\n    connectedCallback() {\n        this.setupProps();\n\n        this.checkHidden();\n\n        if (this.isHidden) {\n            return;\n        }\n\n        this.render();\n\n        this.setupEventListeners();\n        this.setupViewHandler();\n    }\n\n    /**\n     * Initializes the properties of the campaign banner.\n     * @private\n     */\n    setupProps() {\n        const getAttr = (attr, def) => this.getAttribute(attr) || def;\n\n        // banner props\n        this.campaignId = getAttr(\"campaign-id\");\n        this.imageUrl = getAttr(\"image-url\", \"_blank\");\n        this.learnMoreLink = getAttr(\"learn-more-link\");\n        this.title = getAttr(\"title\", \"Banner Title\");\n        this.description = getAttr(\"description\", \"Banner Description.\");\n        this.learnMoreText = getAttr(\"learn-more-text\", \"Learn More\");\n        this.securityToken = getAttr(\"cp-security-token\");\n        this.showAgainIn = Number(getAttr(\"show-again-in\"));\n        this.dismissible = this.hasAttribute(\"dismissible\");\n        this.hasAnalytics = this.hasAttribute(\"banner-analytics\");\n        this.showSurvey = !this.hasAttribute(\"survey-dismissed\");\n\n        // marketing strings\n        this.surveyTitle = getAttr(\"survey-title\");\n        this.surveyYes = getAttr(\"survey-yes\");\n        this.surveyNo = getAttr(\"survey-no\");\n\n        // internal props\n        this.campaignStateId = `${this.campaignId}.dismissed`;\n        this.isHidden = false;\n    }\n\n    /**\n     * Sets up event listeners for the campaign banner.\n     *\n     */\n    setupEventListeners() {\n        this.shadowRoot\n            .querySelectorAll(`[id^=\"${this.campaignId}--track\"]`)\n            .forEach((el) => {\n                // Don't add listener to the banner itself since this\n                // causes extra mix panel events we don't want.\n                if (el.id.match(/--banner$/)) {\n                    return;\n                }\n\n                el.addEventListener(\"click\", (event) =>\n                    this.handleClick(event, el),\n                );\n            });\n    }\n\n    /**\n     * Handles click events on the campaign banner.\n     * @param {Event} event - The click event.\n     * @param {HTMLElement} el - The element that was clicked.\n     */\n    handleClick(event, el) {\n        if (el.onlyOnce) {\n            return;\n        }\n\n        el.onlyOnce = true;\n\n        let eventName = \"click\";\n        for (const eventNameRule of eventNameRules) {\n            if (eventNameRule.pattern.test(el.id)) {\n                eventName = eventNameRule.name;\n                break;\n            }\n        }\n\n        if (this.hasAnalytics) {\n            this.trackEvent(eventName, el.id);\n        }\n\n        if (/--track-learnmore-button$/.test(el.id)) {\n            return;\n        }\n        if (/--track-survey-/.test(el.id)) {\n            this.dismissSurvey();\n            return;\n        }\n        this.dismiss();\n        event.preventDefault();\n    }\n\n    /**\n     * Sets up a view handler for the campaign banner.\n     */\n    setupViewHandler() {\n        const campaignEl = this.shadowRoot.getElementById(\n            `${this.campaignId}--banner`,\n        );\n        // Setup the view handler\n        if (campaignEl) {\n            // Intersection Observer options\n            const options = {\n                root: null,\n                rootMargin: \"0px\",\n                threshold: 0.5,\n            };\n\n            // when observed elements intersect with the viewport\n            const intersectionCallback = (entries, observer) => {\n                entries.forEach((entry) => {\n                    if (entry.isIntersecting) {\n                        if (this.hasAnalytics) {\n                            this.trackEvent(\"view\", campaignEl.id);\n                        }\n                        // We only need to know it was seen once per\n                        // page view.\n\n                        observer.unobserve(campaignEl);\n                    }\n                });\n            };\n\n            const observer = new IntersectionObserver(\n                intersectionCallback,\n                options,\n            );\n            observer.observe(campaignEl);\n        }\n    }\n\n    /**\n     * Track the event\n     *\n     * @private\n     * @param {string} action - the kind of action taken\n     * @param {string} elementId - unique id of the element the action is taken against\n     */\n    trackEvent(action, elementId) {\n        window[\"mixpanel\"]?.track(\n            `${application}-${appKey}-${this.campaignId}.${action}`,\n            {\n                campaign_id: this.campaignId,\n                action: action.toLowerCase(),\n                id: elementId,\n                application: application.toLowerCase(),\n            },\n        );\n    }\n\n    /**\n     * Renders the campaign banner.\n     */\n    render() {\n        const dir = this.closest(\"[dir]\")?.getAttribute(\"dir\") || \"ltr\";\n\n        const bannerHeaderDescription = (size) =>\n            `<p class=\"banner-header-description--${size}\">${this.description}</p>`;\n\n        const closeButton = (dismissible) => {\n            return dismissible\n                ? `<button\n                        type=\"button\"\n                        class=\"btn btn-close btn-shrink close float-right banner-close whatever\"\n                        id=\"${this.campaignId}--track-close\"\n                        data-testid=\"banner-close__${this.campaignId}\"\n                    >\n                        <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n                    </button>`\n                : \"\";\n        };\n\n        const survey = () =>\n            `<div class=\"banner-hr\"></div>\n                <div id=\"${this.campaignId}--survey\" class=\"card-footer\">\n                    <p>${this.surveyTitle}</p>\n                    <span class=\"banner-survey-options\">\n                        <button class=\"btn icon-btn-link banner-survey-button\" id=\"${this.campaignId}--track-survey-yes\" data-testid=\"banner-survey-yes__${this.campaignId}\">${this.surveyYes}</button>\n                        <span>|</span>\n                        <button class=\"btn icon-btn-link banner-survey-button\" id=\"${this.campaignId}--track-survey-no\" data-testid=\"banner-survey-no__${this.campaignId}\">${this.surveyNo}</button>\n                    </span>\n            </div>`;\n\n        this.shadowRoot.innerHTML = `\n            <style>${scss}</style>\n            <div id=\"${this.campaignId}--banner\" class=\"card\" dir=\"${dir}\">\n                <div class=\"card-header\">\n                    <div class=\"banner-header-content\">\n                        <img id=\"${this.campaignId}--image\" class=\"banner-image\" src=\"${this.imageUrl}\" data-testid=\"banner-image__${this.campaignId}\" alt=\"Logo\" />\n                        <div class=\"banner-header-text\">\n                            <p class=\"banner-header-title\">${this.title}</p>\n                            ${bannerHeaderDescription(\"large\")}\n                        </div>\n                    </div>\n                    ${bannerHeaderDescription(\"small\")}\n                    <a\n                        id=\"${this.campaignId}--track-learnmore-button\"\n                        class=\"btn btn-primary banner-cta ${this.dismissible ? \"banner-primary-action--dismissible\" : \"\"}\"\n                        href=\"${this.learnMoreLink}\"\n                        target=\"_blank\"\n                        data-testid=\"banner-learn-more__${this.campaignId}\"\n                    >\n                        ${this.learnMoreText}\n                    </a>\n                </div>\n                ${this.hasAnalytics && this.showSurvey ? survey() : \"\"}\n                ${closeButton(this.dismissible)}\n            </div>`;\n    }\n\n    /**\n     * Retrieve the last time the campaign was dismissed, if anytime.\n     *\n     * @private\n     * @returns\n     */\n    lastTimeDismissed = () => {\n        return localStorage.getItem(this.campaignStateId);\n    };\n\n    /**\n     * Dismiss the campaign. This will set the date the campaign was dismissed so we can\n     * calculate the retry period that will allow the campaign to be shown again in a few\n     * days according to the configured showItAgain period in seconds.\n     *\n     * @private\n     */\n    dismiss = () => {\n        if (this.dismissible) {\n            this.hide();\n            localStorage.setItem(\n                this.campaignStateId,\n                new Date().toISOString(),\n            );\n        }\n    };\n\n    /**\n     * Hide the view.\n     *\n     * @private\n     */\n    hide = () => {\n        const campaignEl = this.shadowRoot.getElementById(\n            `${this.campaignId}--banner`,\n        );\n        campaignEl?.remove();\n    };\n\n    /**\n     * Remove the banner and add a localstorage entry so that it is hidden on refresh.\n     *\n     * @private\n     */\n    dismissSurvey = async () => {\n        const campaignSurvey = this.shadowRoot.getElementById(\n            `${this.campaignId}--survey`,\n        );\n        campaignSurvey?.remove();\n\n        await this.setPersonalizationData(\n            this.securityToken,\n            `${this.campaignId}_survey`,\n            1,\n        );\n    };\n\n    /**\n     * Initialize the campaign view\n     *\n     * @private\n     */\n    checkHidden = () => {\n        const dismissed = this.lastTimeDismissed(this.campaignId);\n\n        const elapsedGreaterThanShow =\n            new Date() - new Date(dismissed) > this.showAgainIn;\n\n        if (\n            !dismissed ||\n            (this.showAgainInAvailable && elapsedGreaterThanShow)\n        ) {\n            return;\n        }\n\n        this.isHidden = true;\n    };\n\n    /**\n     * Set personalization data (nvdata) for user\n     * Specifically with ${campaignId}_survey: 1\n        // in /var/cpanel/whm/nvdata/root/campaign-banner.yaml\n     */\n    async setPersonalizationData(securityToken, name, data) {\n        const body = {\n            \"api.version\": 1,\n            store: NVDATA_STORE,\n            personalization: { [name]: data },\n        };\n\n        const request = new Request(\n            `${securityToken}/json-api/personalization_set`,\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(body),\n            },\n        );\n\n        try {\n            const response = await fetch(request);\n\n            if (!response.ok) {\n                throw new Error(\n                    `Network response was not ok: ${response.statusText}`,\n                );\n            }\n\n            const responseData = await response.json();\n\n            if (responseData.metadata && !responseData.metadata.result) {\n                throw new Error(responseData.metadata.reason);\n            }\n\n            return responseData;\n        } catch (error) {\n            console.error(`DEV ERROR: ${error}`);\n        }\n    }\n}\n","//                                     Copyright 2024 WebPros International, LLC\n//                                                           All rights Reserved.\n// copyright@cpanel.net                                         http://cpanel.net\n// This code is subject to the cPanel license. Unauthorized copying is prohibited\n\nimport { CampaignBanner360 } from \"./campaign-banner\";\n\ncustomElements.define(\"campaign-banner-360\", CampaignBanner360);\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","eventNameRules","name","pattern","CampaignBanner360","HTMLElement","constructor","super","this","attachShadow","mode","connectedCallback","setupProps","checkHidden","isHidden","render","setupEventListeners","setupViewHandler","getAttr","attr","def","getAttribute","campaignId","imageUrl","learnMoreLink","title","description","learnMoreText","securityToken","showAgainIn","Number","dismissible","hasAttribute","hasAnalytics","showSurvey","surveyTitle","surveyYes","surveyNo","campaignStateId","shadowRoot","querySelectorAll","forEach","el","id","match","addEventListener","event","handleClick","onlyOnce","eventName","eventNameRule","test","trackEvent","dismissSurvey","dismiss","preventDefault","campaignEl","getElementById","intersectionCallback","entries","observer","entry","isIntersecting","unobserve","IntersectionObserver","root","rootMargin","threshold","observe","action","elementId","window","track","campaign_id","toLowerCase","application","dir","closest","bannerHeaderDescription","size","innerHTML","scss","survey","closeButton","lastTimeDismissed","localStorage","getItem","hide","setItem","Date","toISOString","remove","async","campaignSurvey","setPersonalizationData","dismissed","elapsedGreaterThanShow","showAgainInAvailable","data","body","store","personalization","request","Request","method","headers","JSON","stringify","response","fetch","ok","Error","statusText","responseData","json","metadata","result","reason","error","console","customElements","define"],"mappings":"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","x_google_ignoreList":[0]}